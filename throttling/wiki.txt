A distributed cache engine (coherence, memcached, hazelcast or ehcache) is needed in that case if we expect a high number of client requests so more simulated services have to be used to serve these requests. These simulated services that pretend to be the same backend service are on different servers (JVMs) but a common cache space is needed where all the simulated services will see the same statistics data (e.g. how many requests are served by the real service at the moment). 
If only one simulated service will be used (or all the simulated services that protect the same backend service are on the same JVM) then we donâ€™t need an external distributed cache to be deployed and maintained but the Valogato throttling system will take care of the caching (-> LocalCache).